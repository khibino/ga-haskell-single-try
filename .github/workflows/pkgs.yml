name: build each packages

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    # dirty hack applying ubuntu-18.04 (bionic) to execute xenial binaries
    runs-on: ubuntu-18.04

    env:
      PKGS: |
        text-0.11.3.1 \
        QuickCheck-2.7.6 \
        basement-0.0.12 \

    strategy:
      fail-fast: false
      matrix:
        include:
          - ghc: '7.6.3'
            ghc-option: --ghc-option=-optl-no-pie
            cabal-install: '1.20'
          - ghc: '7.4.2'
            ghc-option: --ghc-option=-optl-no-pie
            cabal-install: '1.20'

    steps:
    - uses: actions/checkout@v2
    - uses: khibino/haskell-actions/setup@v1-g7
    # - uses: haskell/actions/setup@v1
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal-install }}

    - name: Cache
      uses: actions/cache@v1
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Clear cabal configuration
      run: |
        # remove cabal configuration in cache
        rm ~/.cabal/config
        cabal --version
    - name: Install dependencies
      run: |
        set -ex
        cabal update
        for p in ${{ env.PKGS }}; do \
          cabal unpack $p; \
          ( cd $p && cabal install ${{ matrix.ghc-option }} --only-dependencies ); \
        done
    - name: Build
      run: |
        set -ex
        for p in ${{ env.PKGS }}; do \
          ( cd $p && cabal build ${{ matrix.ghc-option }} ); \
        done

### Local Variables: ***
### mode:yaml ***
### indent-tabs-mode: nil ***
### End: ***
